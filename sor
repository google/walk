#!/bin/bash
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

short_usage() {
	echo 'Usage: sor SNIPPET...'
}

help() {
	short_usage
	cat <<EOF
For each line from standard input, evaluate the specified SNIPPETs under Bash
with the line as the argument. Print the line if any snippet returns status 0.

      -0, --null             separate input and output filenames by null
      --help                 display this help and exit
EOF
}

ask_for_help() {
	echo "Try 'sor --help' for more information."
}

read_filename() {
	local null_terminate=$1
	local target_var=$2
	if [[ $null_terminate == true ]]; then
		IFS= read -r -d '' "$target_var"
	else
		# shellcheck disable=SC2229
		read -r "$target_var"
	fi
}

print_filename() {
	local null_terminate=$1
	local filename=$2
	if [[ $null_terminate == true ]]; then
		printf '%s\0' "$filename"
	else
		printf '%s\n' "$filename"
	fi
}

# This requires util-linux getopt.
if ! temp=$(getopt -s bash -n sor -o 0 -l null,help -- "$@"); then
	ask_for_help >&2
	exit 1
fi
eval set -- "$temp"
unset temp
null_terminate=false
while true; do
	case "$1" in
	--help)
		help
		exit 0
		;;
	-0|--null)
		shift
		null_terminate=true
		;;
	--)
		shift
		break
		;;
	*)
		echo >&2 'Internal error; please report.'
		exit 1
		;;
	esac
done

while read_filename "$null_terminate" file; do
	# shellcheck disable=SC2154
	qfile=$(printf '%q' "$file")
	for test in "$@"; do
		if eval "$test $qfile"; then
			print_filename "$null_terminate" "$file"
			continue 2
		fi
	done
done
